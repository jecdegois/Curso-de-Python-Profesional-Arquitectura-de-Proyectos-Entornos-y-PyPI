[project]
name = "platzi-news"
version = "0.1.0"
description = "CLI app to search news from Guardian and NewsAPI, and analyze with OpenAI"
readme = "README.md"
requires-python = ">=3.13"
authors = [
    {name = "Luis Martinez", email = "lcmartinezl05@gmail.com"},
]
dependencies = [
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "openai>=1.0.0",
    "rich>=13.0.0",
    "pydantic>=2.10.6",
    "pydantic-settings>=2.8.1",
    "sentry-sdk>=2.39.0",
    "httpx>=0.28.1",
]

[project.scripts]
platzi-news = "platzi_news.main:main"

[dependency-groups]
dev = [
    "lxml>=6.0.2",
    "mypy>=1.18.2",
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-xdist>=3.8.0",
    "ruff>=0.13.2",
    "snakeviz>=2.2.2",
    "types-requests>=2.32.4.20250913",
]

[tool.ruff]
extend-exclude = [
    "src/platzi_news/do_not_format"
]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # flake8-bandit
    "S",
]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = true
warn_unreachable = true
strict_equality = true


[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
pythonpath = ["src"]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true